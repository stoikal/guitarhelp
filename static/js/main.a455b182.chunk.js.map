{"version":3,"sources":["components/Key.js","components/Chords.js","components/Fretboard.js","components/MainModule.js","App.js","serviceWorker.js","index.js"],"names":["Key","props","closeModal","document","getElementById","style","display","changeKey","t","m","k","toLowerCase","abc","notesArray","slice","indexOf","intv","intervals","arr","i","p","reduce","a","b","sharps","eqvl","push","setChords","chords","setKey","tonic","mode","setNotes","nameToNum","handleModeChange","num","modes","scale","handleTonicChange","modeColumn1","map","str","key","className","onClick","modeColumn2","name","lastIndexOf","id","e","toUpperCase","Chords","chordList","notes","quality","numerals","Fretboard","changeToFlat","dot","x","determineClassName","fretRows","openString","MainModule","equivalents","c","d","f","g","ionian","isMajor","useState","setNumerals","length","replace","concat","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4OA0JeA,MAvJf,SAAcC,GAEZ,IAQMC,EAAa,WACjBC,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAGlDC,EAAY,SAACC,EAAGC,GAQpB,IAPA,IAAIC,EAASF,EAAEG,cACXC,EAASX,EAAMY,WAAWC,MAAMb,EAAMY,WAAWE,QAAQP,IACzDQ,EAASP,EAAEQ,UAEXC,EAAS,GAGJC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAIR,EAAKI,EAAKF,MAAM,EAAEK,GAAGE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAChDd,EAAEe,OAAOT,QAAQL,GAAK,IACzBU,EAAInB,EAAMwB,KAAKL,IAEjBF,EAAIQ,KAAMN,GAGZnB,EAAM0B,UAAUlB,EAAEmB,QAClB3B,EAAM4B,OAAO,CAACC,MAAOtB,EAAGuB,KAAMtB,IAC9BR,EAAM+B,SAASd,GACfjB,EAAMgC,UAAUxB,EAAEmB,SAGdM,EAAmB,SAACC,GACxB,IAAI1B,EAAIR,EAAMmC,MAAMD,GACpB5B,EAAUN,EAAMoC,MAAMP,MAAMrB,GAC5BP,KAGIoC,EAAoB,SAAC9B,GACzB,IAAIC,EAAIR,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAC3C5B,EAAUC,EAAEC,GACZP,KAgBIqC,EAAc,CAAC,iBAAiB,SAAS,WAAW,UAAUC,KAAI,SAACC,EAAKtB,GAC5E,OACE,yBACEuB,IAAKD,EACLE,UAAU,WACVC,QAAS,WAAOV,EAAiBf,KAEhCsB,MAKDI,EAAc,CAAC,aAAa,0BAA0B,WAAWL,KAAI,SAACC,EAAKtB,GAC/E,OACE,yBACEuB,IAAKD,EACLE,UAAU,WACVC,QAAS,WAAOV,EAAiBf,EAAE,KAElCsB,MAKP,OACE,yBAAKE,UAAU,WACX,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBAAoBC,QAxCpB,WACrB,IAAIpC,EAAIP,EAAMY,WAAWZ,EAAMY,WAAWE,QAAQd,EAAMoC,MAAMP,OAAS,GACvEQ,EAAkB9B,KAsCZ,KAGA,yBAAKmC,UAAU,eAGjB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gBAAgBC,QA1FlB,WACrBzC,SAASC,eAAe,cAAcC,MAAMC,QAAU,UA0F1CL,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQd,EAAMoC,MAAMP,OAAS,EAAI7B,EAAMwB,KAAKxB,EAAMoC,MAAMP,OAAS7B,EAAMoC,MAAMP,OAE9H,yBAAKa,UAAU,eAAeC,QAjGlB,WACpBzC,SAASC,eAAe,aAAaC,MAAMC,QAAU,UAiGzCL,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGW,OAI9C,yBAAKH,UAAU,OACb,yBAAKA,UAAU,4BAA4BC,QAnD1B,WACvB,IAAIpC,EAAIP,EAAMY,WAAWZ,EAAMY,WAAWkC,YAAY9C,EAAMoC,MAAMP,OAAS,GAC3EQ,EAAkB9B,KAiDZ,KAGA,yBAAKmC,UAAU,eAKjB,yBAAKA,UAAU,QAAQK,GAAG,cACxB,yBAAKL,UAAU,iBACb,0BAAMA,UAAU,QAAQC,QAAS1C,GAAjC,QACA,yBAAKyC,UAAU,aACb,yBAAKA,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,aAAarC,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQ,WAAQ,EAAId,EAAMwB,KAAK,WAAMyB,cAAgB,WAC3K,yBAAKP,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,aAAarC,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQ,WAAQ,EAAId,EAAMwB,KAAK,WAAMyB,cAAgB,WAC3K,yBAAKP,UAAU,oBACf,yBAAKA,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,aAAarC,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQ,WAAQ,EAAId,EAAMwB,KAAK,WAAMyB,cAAgB,WAC3K,yBAAKP,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,aAAarC,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQ,WAAQ,EAAId,EAAMwB,KAAK,WAAMyB,cAAgB,WAC3K,yBAAKP,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,aAAarC,EAAMmC,MAAMnC,EAAMoC,MAAMN,KAAKI,IAAM,GAAGX,OAAOT,QAAQ,WAAQ,EAAId,EAAMwB,KAAK,WAAMyB,cAAgB,YAE7K,yBAAKP,UAAU,aACb,yBAAKA,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,KACA,yBAAKK,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOX,EAAkB,OAA5D,QAKN,yBAAKK,UAAU,QAAQK,GAAG,aACxB,yBAAKL,UAAU,gBACb,0BAAMA,UAAU,QAAQC,QAAS1C,GAAjC,QACA,yBAAK8C,GAAG,eACLT,GAEH,yBAAKS,GAAG,eACLH,OCrGAM,MA3Cf,SAAiBlD,GAEf,IAAMmD,EAAYnD,EAAMoD,MAAMb,KAAI,SAACC,EAAKtB,GACtC,IAAImC,EACJ,OAAQrD,EAAM2B,OAAOT,IACnB,IAAK,MACHmC,EAAU,IACV,MACF,IAAK,MACHA,EAAU,GACV,MACF,IAAK,MACHA,EAAU,OACV,MACF,IAAK,MACHA,EAAU,IACV,MACF,QAASA,EAAUrD,EAAM2B,OAAOT,GAGlC,OACE,yBAAKuB,IAAKD,EAAMtB,EAAGwB,UAAS,iBAAY1C,EAAM2B,OAAOT,KACnD,yBAAKwB,UAAS,oBAAe1C,EAAM2B,OAAOT,KACvCsB,EAAIS,cAAgBI,GAGvB,yBAAKX,UAAS,uBAAkB1C,EAAM2B,OAAOT,KAC1ClB,EAAMsD,SAASpC,QAOxB,OACE,yBAAKwB,UAAU,mBACb,yBAAKA,UAAU,cACZS,KCuFMI,MA5Hf,YAA4C,IAAvBnB,EAAsB,EAAtBA,MAAOZ,EAAe,EAAfA,KAAM4B,EAAS,EAATA,MAU1BI,EAAe,SAACC,GACpB,IAAIC,EAAID,EAMR,OAJIrB,EAAMN,KAAKP,OAAOT,QAAQsB,EAAMP,OAAS,IAC3C6B,EAAIlC,EAAKiC,IAGJC,GAGHC,EAAqB,SAACF,GAC1B,IAAMC,EAAIF,EAAaC,GACnBjB,EAAG,eAAWkB,EAAX,SACP,OAAQN,EAAMtC,QAAQ4C,IACpB,KAAM,EACJlB,EAAG,eAAWkB,GACd,MACF,KAAK,EACHlB,GAAO,YACP,MACF,KAAK,EACHA,GAAO,aACP,MACF,KAAK,EACHA,GAAO,aACP,MACF,KAAK,EACHA,GAAO,eACP,MACF,QAASA,EAAG,eAAWkB,EAAX,SAEd,OAAOlB,GAGHoB,EApCU,CAPH,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,KAC7D,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,KAC7D,CAAC,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,KAC7D,CAAC,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,KAC7D,CAAC,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,KAC7D,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,MAsCjDrB,KAAI,SAACtB,EAAKC,GAAN,OAC3B,yBAAKuB,IAAG,cAASvB,EAAI,GAAKwB,UAAU,YAE9BzB,EAAIsB,KAAI,SAACkB,EAAKC,GAAN,OACN,yBAAKjB,IAAKgB,EAAMC,EAAGhB,UAAU,YAC3B,yBAAKA,UAAWiB,EAAmBF,IAChCD,EAAaC,GAAKR,mBAK7B,yBAAKP,UAAU,gBAIbmB,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKtB,KAAI,SAACkB,EAAKvC,GAAN,OACpD,yBAAKuB,IAAKgB,EAAMvC,EAAGwB,UAAU,oBAC3B,yBAAKA,UAAS,UAAKiB,EAAmBF,GAAxB,UACXA,EAAIR,mBAKX,OACE,yBAAKF,GAAG,sBACN,yBAAKA,GAAG,iBACN,yBAAKA,GAAG,cACLc,GAEH,yBAAKd,GAAG,aACLa,IAGL,yBAAKlB,UAAU,cACb,yBAAKA,UAAU,gBACf,yBAAKK,GAAG,2BACN,yBAAKL,UAAU,gBACf,yBAAKA,UAAU,WAAf,KACA,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,WAAf,KACA,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,WAAf,KACA,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,WAAf,KACA,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,WAAf,QAGJ,yBAAKA,UAAU,cACb,yBAAKK,GAAG,eACN,yBAAKL,UAAU,eACb,yBAAKA,UAAU,2BACd,IACD,0BAAMA,UAAU,eAAhB,WAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,4BACd,IACD,0BAAMA,UAAU,eAAhB,YAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,4BACd,IACD,0BAAMA,UAAU,eAAhB,YAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,8BACd,IACD,0BAAMA,UAAU,eAAhB,kBC1BGoB,MAlFf,WAEE,IACMC,EAAgC,CAAC1C,EAAE,IAAKC,EAAE,IAAK0C,EAAE,IAAKC,EAAE,IAAKjB,EAAE,IAAKkB,EAAE,IAAKC,EAAE,IAAK,UAAK,UAAK,UAAK,UAAM,UAAK,IAAK,UAAK,UAAK,UAAK,UAAK,UAAK,UAAM,UAAK,KACrJC,EAAgC,CAAClC,IAAK,EAAGW,KAAK,SAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,YAO3LY,EAAgC,CAACiC,EAND,CAAClC,IAAK,EAAGW,KAAK,SAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,UAAK,UAAK,OAC7J,CAACW,IAAK,EAAGW,KAAK,WAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,UAAK,UAAK,UAAK,UAAK,YAC/J,CAACW,IAAK,EAAGW,KAAK,SAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAC3J,CAACW,IAAK,EAAGW,KAAK,aAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,UAAK,YAC5J,CAACW,IAAK,EAAGW,KAAK,UAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,IAAI,IAAI,UAAK,UAAK,UAAK,YAC9J,CAACW,IAAK,EAAGW,KAAK,UAAcwB,SAAS,EAAOrD,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIW,OAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAQJ,OAAO,CAAC,IAAI,UAAK,UAAK,KAAK,UAAK,UAAK,OAVjL,EAc2B+C,mBAAS,CAACzC,MAAM,IAAKC,KAAKsC,IAdrD,mBAcd3B,EAdc,KAcTb,EAdS,OAe2B0C,mBAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAf7D,mBAedlB,EAfc,KAePrB,EAfO,OAgB2BuC,mBAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,QAhBzE,mBAgBd3C,EAhBc,KAgBND,EAhBM,OAiB2B4C,mBAAS,CAAC,IAAI,KAAK,MAAM,KAAK,IAAI,KAAK,YAjBlE,mBAiBdhB,EAjBc,KAiBJiB,EAjBI,KA8CrB,OACE,yBAAKxB,GAAG,cACN,yBAAKA,GAAG,YACN,yBAAKA,GAAG,aACN,kBAAC,EAAD,CACEZ,MAAQA,EACRC,MAAQK,EACRV,SAAYA,EACZH,OAAUA,EACVF,UAAaA,EACbd,WAtD4B,CAAC,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,UAAK,KAuDvIY,KAAOuC,EACP/B,UApCQ,SAAC0B,GAEjB,IADA,IAAIzC,EAAM,GACDC,EAAI,EAAGA,EAAIwC,EAAEc,OAAQtD,IAC5B,OAAQwC,EAAExC,IACR,IAAK,MACHD,EAAIQ,KAAM6B,EAASpC,GAAGuD,QAAQ,OAAI,IAAI/D,eACtC,MACF,IAAK,MACHO,EAAIQ,KAAM6B,EAASpC,GAAGuD,QAAQ,OAAI,IAAIxB,eACtC,MACF,IAAK,MACHhC,EAAIQ,KAAM6B,EAASpC,GAAGuD,QAAQ,OAAI,IAAI/D,cAAcgE,OAAO,SAC3D,MACF,IAAK,MACHzD,EAAIQ,KAAM6B,EAASpC,GAAGuD,QAAQ,OAAI,IAAIxB,cAAcyB,OAAO,MAC3D,MACF,QAASzD,EAAIQ,KAAM6B,EAASpC,GAAGuD,QAAQ,OAAI,IAAIxB,eAGnDsB,EAAYtD,OAoBR,yBAAK8B,GAAG,cACN,kBAAC,EAAD,CACEK,MAAOA,EACPzB,OAAQA,EACR2B,SAAUA,EACVnB,MAAOA,MAKb,yBAAKY,GAAG,YACN,kBAAC,EAAD,CACEX,MAAaK,EACbW,MAAWA,EACX5B,KAAWuC,O,MCrENY,MARf,WACE,OACE,yBAAK5B,GAAG,SACN,kBAAC,EAAD,QCKc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAShF,SAASC,eAAe,SD2H3C,kBAAmBgF,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a455b182.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Key (props) {\r\n\r\n  const openModeModal = () => {\r\n    document.getElementById(\"modeModal\").style.display = \"block\";\r\n  }\r\n\r\n  const openTonicModal = () => {\r\n    document.getElementById(\"tonicModal\").style.display = \"block\";\r\n  }\r\n\r\n  const closeModal = () => {\r\n    document.getElementById(\"modeModal\").style.display = \"none\";\r\n    document.getElementById(\"tonicModal\").style.display = \"none\";\r\n  }\r\n\r\n  const changeKey = (t, m) => {\r\n    let k      = t.toLowerCase();\r\n    let abc    = props.notesArray.slice(props.notesArray.indexOf(t));\r\n    let intv   = m.intervals;\r\n\r\n    let arr    = [];\r\n\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      let p = abc[ intv.slice(0,i).reduce((a, b) => a + b, 0) ];\r\n      if ( m.sharps.indexOf(k) < 0 ) {\r\n        p = props.eqvl[p];\r\n      }\r\n      arr.push( p )\r\n    }\r\n\r\n    props.setChords(m.chords);\r\n    props.setKey({tonic: t, mode: m});\r\n    props.setNotes(arr);\r\n    props.nameToNum(m.chords);\r\n  }\r\n\r\n  const handleModeChange = (num) => {\r\n    let m = props.modes[num];\r\n    changeKey(props.scale.tonic,m);\r\n    closeModal();\r\n  }\r\n\r\n  const handleTonicChange = (t) => {\r\n    let m = props.modes[props.scale.mode.num - 1];\r\n    changeKey(t,m);\r\n    closeModal();\r\n  }\r\n\r\n  const handleKeyRaise = () => {\r\n    let t = props.notesArray[props.notesArray.indexOf(props.scale.tonic) + 1]\r\n    handleTonicChange(t);\r\n  }\r\n\r\n  const handleKeyFlatten = () => {\r\n    let t = props.notesArray[props.notesArray.lastIndexOf(props.scale.tonic) - 1]\r\n    handleTonicChange(t);\r\n  }\r\n\r\n\r\n\r\n\r\n  const modeColumn1 = [\"Ionian / major\",\"Dorian\",\"Phrygian\",\"Lydian\"].map((str, i) => {\r\n    return (\r\n      <div\r\n        key={str}\r\n        className=\"modeList\"\r\n        onClick={() => {handleModeChange(i,null)}}\r\n      >\r\n        {str}\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const modeColumn2 = [\"Myxolydian\",\"Aeolian / natural minor\",\"Locrian\"].map((str, i) => {\r\n    return (\r\n      <div\r\n        key={str}\r\n        className=\"modeList\"\r\n        onClick={() => {handleModeChange(i+4,null)}}\r\n      >\r\n        {str}\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"keyWrap\">\r\n        <div className=\"key\">\r\n          <div className=\"raiseOrFlattenKey\" onClick={handleKeyRaise}>\r\n            ^\r\n          </div>\r\n          <div className=\"fillerDiv\"></div>\r\n        </div>\r\n\r\n        <div className=\"key\">\r\n            <div className=\"console tonic\" onClick={openTonicModal}>\r\n              { props.modes[props.scale.mode.num - 1].sharps.indexOf(props.scale.tonic) < 0 ? props.eqvl[props.scale.tonic] : props.scale.tonic  }\r\n            </div>\r\n            <div className=\"console mode\" onClick={openModeModal}>\r\n              { props.modes[props.scale.mode.num - 1].name}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"key\">\r\n          <div className=\"raiseOrFlattenKey flatten\" onClick={handleKeyFlatten}>\r\n            ^\r\n          </div>\r\n          <div className=\"fillerDiv\"></div>\r\n\r\n        </div>\r\n\r\n        {/* MODAL BOX */}\r\n        <div className=\"modal\" id=\"tonicModal\">\r\n          <div className=\"tonic-content\">\r\n            <span className=\"close\" onClick={closeModal}>&times;</span>\r\n            <div className=\"blackKeys\">\r\n              <div className=\"keys blk\" onClick={(e) => handleTonicChange(\"c♯\",null)}>{props.modes[props.scale.mode.num - 1].sharps.indexOf(\"c♯\") < 0 ? props.eqvl[\"c♯\"].toUpperCase() : \"C♯\"}</div>\r\n              <div className=\"keys blk\" onClick={(e) => handleTonicChange(\"d♯\",null)}>{props.modes[props.scale.mode.num - 1].sharps.indexOf(\"d♯\") < 0 ? props.eqvl[\"d♯\"].toUpperCase() : \"D♯\"}</div>\r\n              <div className=\"keys blk filler\"></div>\r\n              <div className=\"keys blk\" onClick={(e) => handleTonicChange(\"f♯\",null)}>{props.modes[props.scale.mode.num - 1].sharps.indexOf(\"f♯\") < 0 ? props.eqvl[\"f♯\"].toUpperCase() : \"F♯\"}</div>\r\n              <div className=\"keys blk\" onClick={(e) => handleTonicChange(\"g♯\",null)}>{props.modes[props.scale.mode.num - 1].sharps.indexOf(\"g♯\") < 0 ? props.eqvl[\"g♯\"].toUpperCase() : \"G♯\"}</div>\r\n              <div className=\"keys blk\" onClick={(e) => handleTonicChange(\"a♯\",null)}>{props.modes[props.scale.mode.num - 1].sharps.indexOf(\"a♯\") < 0 ? props.eqvl[\"a♯\"].toUpperCase() : \"A♯\"}</div>\r\n            </div>\r\n            <div className=\"whiteKeys\">\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"c\",null)}>C</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"d\",null)}>D</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"e\",null)}>E</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"f\",null)}>F</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"g\",null)}>G</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"a\",null)}>A</div>\r\n              <div className=\"keys wht\" onClick={(e) => handleTonicChange(\"b\",null)}>B</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" id=\"modeModal\">\r\n          <div className=\"mode-content\">\r\n            <span className=\"close\" onClick={closeModal}>&times;</span>\r\n            <div id=\"modeColumn1\">\r\n              {modeColumn1}\r\n            </div>\r\n            <div id=\"modeColumn2\">\r\n              {modeColumn2}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Key;\r\n","import React from 'react';\r\n\r\nfunction Chords (props) {\r\n\r\n  const chordList = props.notes.map((str, i) => {\r\n    let quality;\r\n    switch (props.chords[i]) {\r\n      case \"min\":\r\n        quality = \"m\";\r\n        break;\r\n      case \"maj\":\r\n        quality = \"\";\r\n        break;\r\n      case \"dim\":\r\n        quality = \"°\";\r\n        break;\r\n      case \"aug\":\r\n        quality = \"+\";\r\n        break;\r\n      default: quality = props.chords[i]\r\n    }\r\n\r\n    return (\r\n      <div key={str + i} className={`chords ${props.chords[i]}`}>\r\n        <div className={`chordName ${props.chords[i]}`}>\r\n          {str.toUpperCase() + quality\r\n          }\r\n        </div>\r\n        <div className={`chordNumeral ${props.chords[i]}`}>\r\n          {props.numerals[i]}\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"chordsContainer\">\r\n      <div className=\"chordsWrap\">\r\n        {chordList}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chords;\r\n","import React from 'react';\n\nfunction Fretboard({ scale, eqvl, notes }) {\n  const row1 = ['f', 'f♯', 'g', 'g♯', 'a', 'a♯', 'b', 'c', 'c♯', 'd', 'd♯', 'e'];\n  const row2 = ['c', 'c♯', 'd', 'd♯', 'e', 'f', 'f♯', 'g', 'g♯', 'a', 'a♯', 'b'];\n  const row3 = ['g♯', 'a', 'a♯', 'b', 'c', 'c♯', 'd', 'd♯', 'e', 'f', 'f♯', 'g'];\n  const row4 = ['d♯', 'e', 'f', 'f♯', 'g', 'g♯', 'a', 'a♯', 'b', 'c', 'c♯', 'd'];\n  const row5 = ['a♯', 'b', 'c', 'c♯', 'd', 'd♯', 'e', 'f', 'f♯', 'g', 'g♯', 'a'];\n  const row6 = ['f', 'f♯', 'g', 'g♯', 'a', 'a♯', 'b', 'c', 'c♯', 'd', 'd♯', 'e'];\n\n  const allrows = [row1, row2, row3, row4, row5, row6];\n\n  const changeToFlat = (dot) => {\n    let x = dot;\n\n    if (scale.mode.sharps.indexOf(scale.tonic) < 0) {\n      x = eqvl[dot];\n    }\n\n    return x;\n  };\n\n  const determineClassName = (dot) => {\n    const x = changeToFlat(dot);\n    let str = `dots ${x} show`;\n    switch (notes.indexOf(x)) {\n      case -1:\n        str = `dots ${x}`;\n        break;\n      case 0:\n        str += ' rootnote';\n        break;\n      case 2:\n        str += ' thirdnote';\n        break;\n      case 4:\n        str += ' fifthnote';\n        break;\n      case 6:\n        str += ' seventhnote';\n        break;\n      default: str = `dots ${x} show`;\n    }\n    return str;\n  };\n\n  const fretRows = allrows.map((arr, i) => (\n    <div key={`row ${i + 1}`} className=\"fretRows\">\n      {\n          arr.map((dot, x) => (\n            <div key={dot + x} className=\"rowDigit\">\n              <div className={determineClassName(dot)}>\n                {changeToFlat(dot).toUpperCase()}\n              </div>\n            </div>\n          ))\n        }\n      <div className=\"strings\" />\n    </div>\n  ));\n\n  const openString = ['e', 'a', 'd', 'g', 'b', 'e'].map((dot, i) => (\n    <div key={dot + i} className=\"openStringColumn\">\n      <div className={`${determineClassName(dot)} open`}>\n        {dot.toUpperCase()}\n      </div>\n    </div>\n  ));\n\n  return (\n    <div id=\"fretboardContainer\">\n      <div id=\"fretboardWrap\">\n        <div id=\"openString\">\n          {openString}\n        </div>\n        <div id=\"fretboard\">\n          {fretRows}\n        </div>\n      </div>\n      <div className=\"fretLegend\">\n        <div className=\"utafFiller0\" />\n        <div id=\"underTheActualFretboard\">\n          <div className=\"utafFiller2\" />\n          <div className=\"fretNum\">3</div>\n          <div className=\"utafFiller1\" />\n          <div className=\"fretNum\">5</div>\n          <div className=\"utafFiller1\" />\n          <div className=\"fretNum\">7</div>\n          <div className=\"utafFiller1\" />\n          <div className=\"fretNum\">9</div>\n          <div className=\"utafFiller2\" />\n          <div className=\"fretNum\">12</div>\n        </div>\n      </div>\n      <div className=\"fretLegend\">\n        <div id=\"colorLegend\">\n          <div className=\"singleColor\">\n            <div className=\"dots show sym rootnote\" />\n            {' '}\n            <span className=\"colorLegend\">= root</span>\n          </div>\n          <div className=\"singleColor\">\n            <div className=\"dots show sym thirdnote\" />\n            {' '}\n            <span className=\"colorLegend\">= third</span>\n          </div>\n          <div className=\"singleColor\">\n            <div className=\"dots show sym fifthnote\" />\n            {' '}\n            <span className=\"colorLegend\">= fifth</span>\n          </div>\n          <div className=\"singleColor\">\n            <div className=\"dots show sym seventhnote\" />\n            {' '}\n            <span className=\"colorLegend\">= seventh</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFretboard.propTypes = {\n  \n};\n\nexport default Fretboard;\n","import React, { useState } from 'react';\r\nimport Key from './Key.js';\r\nimport Chords from './Chords.js';\r\nimport Fretboard from './Fretboard.js';\r\n\r\n\r\nfunction MainModule () {\r\n\r\n  const notesArray                    = [\"b\",\"c\",\"c♯\",\"d\",\"d♯\",\"e\",\"f\",\"f♯\",\"g\",\"g♯\",\"a\",\"a♯\",\"b\",\"c\",\"c♯\",\"d\",\"d♯\",\"e\",\"f\",\"f♯\",\"g\",\"g♯\",\"a\",\"a♯\",\"b\"];\r\n  const equivalents                   = {a:\"a\", b:\"b\", c:\"c\", d:\"d\", e:\"e\", f:\"f\", g:\"g\", \"c♯\":\"d♭\",\"d♯\":\"e♭\", \"e♯\":\"f\", \"f♯\":\"g♭\",\"g♯\":\"a♭\",\"a♯\":\"b♭\", \"b♯\":\"c\"}\r\n  const ionian                        = {num: 1, name:\"Ionian\",     isMajor: true,  intervals:[2,2,1,2,2,2,1], chords:[\"maj\",\"min\",\"min\",\"maj\",\"maj\",\"min\",\"dim\"], sharps:[\"c\",\"g\",\"d\",\"a\",\"e\",\"b\",\"f♯\"]};\r\n  const dorian                        = {num: 2, name:\"Dorian\",     isMajor: false, intervals:[2,1,2,2,2,1,2], chords:[\"min\",\"min\",\"maj\",\"maj\",\"min\",\"dim\",\"maj\"], sharps:[\"d\",\"a\",\"e\",\"b\",\"f♯\",\"c♯\",\"g#\"]};\r\n  const phrygian                      = {num: 3, name:\"Phrygian\",   isMajor: false, intervals:[1,2,2,2,1,2,2], chords:[\"min\",\"maj\",\"maj\",\"min\",\"dim\",\"maj\",\"min\"], sharps:[\"e\",\"b\",\"f♯\",\"c♯\",\"g♯\",\"d♯\",\"a♯\"]};\r\n  const lydian                        = {num: 4, name:\"Lydian\",     isMajor: true,  intervals:[2,2,2,1,2,2,1], chords:[\"maj\",\"maj\",\"min\",\"dim\",\"maj\",\"min\",\"min\"], sharps:[\"f\",\"c\",\"g\",\"d\",\"a\",\"e\",\"b\"]};\r\n  const myxolydian                    = {num: 5, name:\"Myxolydian\", isMajor: true,  intervals:[2,2,1,2,2,1,2], chords:[\"maj\",\"min\",\"dim\",\"maj\",\"min\",\"min\",\"maj\"], sharps:[\"g\",\"d\",\"a\",\"e\",\"b\",\"f♯\",\"c♯\"]};\r\n  const aeolian                       = {num: 6, name:\"Aeolian\",    isMajor: false, intervals:[2,1,2,2,1,2,2], chords:[\"min\",\"dim\",\"maj\",\"min\",\"min\",\"maj\",\"maj\"], sharps:[\"a\",\"e\",\"b\",\"f♯\",\"c♯\",\"g♯\",\"d♯\"]};\r\n  const locrian                       = {num: 7, name:\"Locrian\",    isMajor: false, intervals:[1,2,2,1,2,2,2], chords:[\"dim\",\"maj\",\"min\",\"min\",\"maj\",\"maj\",\"min\"], sharps:[\"b\",\"f♯\",\"c♯\",\"g#\",\"d♯\",\"a♯\",\"f\"]};\r\n  const modes                         = [ionian, dorian, phrygian, lydian, myxolydian, aeolian, locrian]\r\n\r\n\r\n  const [key, setKey]                           = useState({tonic:\"c\", mode:ionian});\r\n  const [notes, setNotes]                       = useState([\"c\",\"d\",\"e\",\"f\",\"g\",\"a\",\"b\"]);\r\n  const [chords, setChords]                     = useState([\"maj\",\"min\",\"min\",\"maj\",\"maj\",\"min\",\"dim\"])\r\n  const [numerals, setNumerals]                 = useState([\"I\",\"II\",\"iii\",\"IV\",\"V\",\"vi\",\"vii°\"]);\r\n\r\n\r\n\r\n\r\n  const nameToNum = (x) => {\r\n    let arr = [];\r\n    for (var i = 0; i < x.length; i++) {\r\n      switch (x[i]) {\r\n        case \"min\":\r\n          arr.push( numerals[i].replace(\"°\",\"\").toLowerCase() );\r\n          break;\r\n        case \"maj\":\r\n          arr.push( numerals[i].replace(\"°\",\"\").toUpperCase() );\r\n          break;\r\n        case \"dim\":\r\n          arr.push( numerals[i].replace(\"°\",\"\").toLowerCase().concat(\"°\") );\r\n          break;\r\n        case \"aug\":\r\n          arr.push( numerals[i].replace(\"°\",\"\").toUpperCase().concat(\"+\") );\r\n          break;\r\n        default: arr.push( numerals[i].replace(\"°\",\"\").toUpperCase() );\r\n      }\r\n    }\r\n    setNumerals(arr);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"mainModule\">\r\n      <div id=\"upperRow\">\r\n        <div id=\"upperLeft\">\r\n          <Key\r\n            modes= {modes}\r\n            scale= {key}\r\n            setNotes = {setNotes}\r\n            setKey = {setKey}\r\n            setChords = {setChords}\r\n            notesArray= {notesArray}\r\n            eqvl= {equivalents}\r\n            nameToNum= {nameToNum}\r\n          />\r\n        </div>\r\n        <div id=\"upperRight\">\r\n          <Chords\r\n            notes={notes}\r\n            chords={chords}\r\n            numerals={numerals}\r\n            modes={modes}\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n      <div id=\"lowerRow\">\r\n        <Fretboard\r\n          scale     = {key}\r\n          notes   = {notes}\r\n          eqvl    = {equivalents}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainModule;\r\n","import React from 'react';\nimport MainModule from \"./components/MainModule.js\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div id=\"omega\">\n      <MainModule />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}